{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "PermutaGov",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "User Endpoints"
    },
    {
      "name": "Intencao",
      "description": "Intencao Endpoints"
    },
    {
      "name": "Orgao",
      "description": "Orgao Endpoints"
    },
    {
      "name": "Unidade",
      "description": "Unidade Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/intencao/create": {
      "post": {
        "tags": [
          "Intencao"
        ],
        "description": "Endpoint to create an \"intenção\"",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Intecao to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Intencao"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/intencao/delete": {
      "delete": {
        "tags": [
          "Intencao"
        ],
        "description": "Endpoint to delete an \"intenção\"",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/create": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/delete/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/update/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/unidade/create": {
      "post": {
        "tags": [
          "Unidade"
        ],
        "description": "Endpoint to include an \"Unidade\"",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Unidade to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Unidade"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/unidade/": {
      "get": {
        "tags": [
          "Unidade"
        ],
        "description": "Endpoint to get all \"Unidade\"",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/unidade/:id": {
      "get": {
        "tags": [
          "Unidade"
        ],
        "description": "Endpoint to get an specific \"Unidade\"",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unidade ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/sign-up": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to sign up a specific user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "User already registered."
          },
          "500": {
            "description": "Registration error."
          }
        }
      }
    },
    "/user/sign-in": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to sign in a specific user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email and password from user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User signed in successfully.",
            "schema": {
              "$ref": "#/definitions/LoggedUser"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get a list of all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns an array of users"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/change-password": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6390fd9dasd1sad14adb4f9a023b"
        },
        "name": {
          "type": "string",
          "example": "Josá da Silva"
        },
        "cpf": {
          "type": "number",
          "example": 12345678912
        },
        "email": {
          "type": "string",
          "example": "emailusuario@provedor.com"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        },
        "createdAt": {
          "type": "string",
          "example": "2022-12-07T20:54:53.302Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-12-07T20:54:53.302Z"
        },
        "_v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "LoggedUser": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzkwZmQ5ZDE4MTRiYjRmOWEwMjgzM2MiLCJuYW1lIjoiSnVsaWFubyBIYXVzZW4gT2xpdmVpcmEgZGEgQ29zdGEiLCJlbWFpbCI6Imp1bGlhbm9oY29zdGFAZ21haWwuY29tIiwiaWF0IjoxNjcwNDQ2NzU3LCJleHAiOjE2NzA0ODk5NTd9.KAN7PHGJh2CHI1EtdquzMvUMwyiV_e2rOu9_W_WCKqc"
        }
      }
    },
    "Intencao": {
      "type": "object",
      "properties": {
        "origemId": {
          "type": "string",
          "example": "6390fd9d1814bb4f9a02833c"
        },
        "destinoId": {
          "type": "string",
          "example": "7392dg9k1985cc4f9a08722d"
        },
        "user": {
          "type": "string",
          "example": "3478fd9d1454gg4f9b07690e"
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "José da Silva"
        },
        "cpf": {
          "type": "number",
          "example": 12345678912
        },
        "email": {
          "type": "string",
          "example": "emailusuario@provedor.com"
        },
        "password": {
          "type": "string",
          "example": "SenhaValida75!"
        }
      },
      "required": [
        "name",
        "cpf",
        "email",
        "password"
      ]
    },
    "SignIn": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "emailusuario@provedor.com"
        },
        "password": {
          "type": "string",
          "example": "SenhaValida75!"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "Unidade": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Delegacia da Receita Federal"
        },
        "sigla": {
          "type": "string",
          "example": "DRF"
        },
        "state": {
          "type": "string",
          "example": "MT"
        },
        "city": {
          "type": "string",
          "example": "Cuiabá"
        },
        "orgaoId": {
          "type": "string",
          "example": "6390fd9d1814bb4f9a02833c"
        }
      }
    },
    "Orgao": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Secretaria da Receita Federal do Brasil"
        },
        "sigla": {
          "type": "string",
          "example": "SRFB"
        },
        "_id": {
          "type": "string",
          "example": "3478fd9d1454gg4f9b07690e"
        }
      }
    }
  }
}